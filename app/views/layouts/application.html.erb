<!DOCTYPE html>
<html>
<head>
  <title>Downisup</title>
	<link rel="shortcut icon" href="/favicon.ico" />
	<link href='http://fonts.googleapis.com/css?family=Lato|Just+Me+Again+Down+Here' rel='stylesheet' type='text/css'>
  <%= stylesheet_link_tag "style" %>
  <%= csrf_meta_tag %>
</head>
<body>

<%= yield %>

<%= javascript_include_tag 'prototype' %>
<script type="text/javascript">
	document.observe("dom:loaded", function() {
		var frame = $('html').contentDocument;
		frame.open(); frame.writeln("<div id='content'></div>"); frame.close();
		var writeTo = frame.getElementById('content'),
				md = $('markdown'),
				text = "", converted = "";
		setInterval(function(){
			text = md.value;
			if(text !== converted) {
				new Ajax.Request("/convert/all", {
					method: 'post',
					parameters: {text: text},
					onSuccess: function(transport) {
						converted = text;
						writeTo.innerHTML = transport.responseText;
					}
				});
			}
		}, 300);
		$('markdown').observe('keydown', function(evt) {
			var tab = "  ",
		  		t = evt.target,
		    	ss = t.selectionStart,
		    	se = t.selectionEnd;
	    if (evt.keyCode === Event.KEY_TAB) {
				Event.stop(evt);
        // evt.preventDefault();
        // multi line selection
        if (ss != se && t.value.slice(ss,se).indexOf("\n") !== -1) {
           // In case selection was not of entire lines (e.g. selection begins in the middle of a line)
           // tab at the beginning as well as at the start of every following line.
           var pre = t.value.slice(0,ss),
           		sel = t.value.slice(ss,se).replace(/\n/g,"\n"+tab),
           		post = t.value.slice(se,t.value.length);
           t.value = pre.concat(tab).concat(sel).concat(post);
           t.selectionStart = ss + tab.length;
           t.selectionEnd = se + tab.length;
        }
        // normal case
        else {
           t.value = t.value.slice(0,ss).concat(tab).concat(t.value.slice(ss,t.value.length));
           if (ss == se) {
               t.selectionStart = t.selectionEnd = ss + tab.length;
           }
           else {
               t.selectionStart = ss + tab.length;
               t.selectionEnd = se + tab.length;
           }
        }
	    }
		  // Backspace key - delete preceding tab expansion, if exists
		  else if (evt.keyCode === Event.KEY_BACKSPACE && t.value.slice(ss - 2,ss) === tab) {
					Event.stop(evt);
	        t.value = t.value.slice(0,ss - 2).concat(t.value.slice(ss,t.value.length));
	        t.selectionStart = t.selectionEnd = ss - tab.length;
	    }
	    // Delete key - delete following tab expansion, if exists
	    else if (evt.keyCode === Event.KEY_DELETE && t.value.slice(se,se + 2) === tab) {
				Event.stop(evt);
        t.value = t.value.slice(0,ss).concat(t.value.slice(ss + 2,t.value.length));
        t.selectionStart = t.selectionEnd = ss;
	    }
	    // Left/right arrow keys - move across the tab in one go
	    else if (evt.keyCode == Event.KEY_LEFT && t.value.slice(ss - 2,ss) === tab) {
				Event.stop(evt);
        t.selectionStart = t.selectionEnd = ss - 2;
	    }
	    else if (evt.keyCode == Event.KEY_RIGHT && t.value.slice(ss,ss + 2) === tab) {
				Event.stop(evt);
        t.selectionStart = t.selectionEnd = ss + 2;
	    }
		});
		(function(){
			var async = document.createElement('script');
			async.type = 'text/javascript';
			async.async = true;
			async.src = '/javascripts/zeroclipboard/ZeroClipboard.js';
			async.onload = function(){
				var setup = function(element) {
					var clip = new ZeroClipboard.Client();
					clip.addEventListener('mousedown', function() {
						clip.setText(writeTo.innerHTML);
					});
					clip.addEventListener('complete', function(client, text) {
						alert(text);
					});
					clip.glue(element);
				};
				ZeroClipboard.setMoviePath('/javascripts/zeroclipboard/ZeroClipboard10.swf');
				setup('copy');
				// ZeroClipboard.setMoviePath('/javascripts/zeroclipboard/ZeroClipboard.swf');
				// setup('copySource');
			};
			document.body.appendChild(async);
		})();
	});
</script>
</body>
</html>
